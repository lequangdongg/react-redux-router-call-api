{"version":3,"sources":["pages/HomePage/HomePage.js","pages/NotFoundPage/NotFoundPage.js","components/ProductList/ProductList.js","components/ProductItem/ProductItem.js","contans/Config.js","utils/apiCaller.js","actions/index.js","contans/ActionTypes.js","pages/ProductListPage/ProductListPage.js","pages/ProductActionPage/ProductActionPage.js","routes.js","components/Menu/Menu.js","App.js","serviceWorker.js","reducers/products.js","reducers/itemEditting.js","reducers/index.js","index.js"],"names":["HomePage","className","Component","NotFoundPage","ProductList","scope","this","props","children","ProductItem","onDelete","id","confirm","product","index","statusName","status","statusClass","name","price","to","type","onClick","API_URL","callApi","endpoint","method","body","axios","url","Config","data","catch","err","console","log","actFetchProducts","products","actDeleteProduct","actAddProduct","ProductListPage","findIndex","result","forEach","onDeleteProduct","showProduct","length","map","key","fetchAllProducts","connect","state","dispatch","then","res","actDeleteProductRequest","ProductActionPage","componentDidMount","match","params","onEditProduct","UNSAFE_componentWillReceiveProps","nextProps","itemEditting","setState","txtName","txtPrice","chkbStatus","onChange","e","target","value","checked","onSave","preventDefault","history","onUpdateProduct","onAddProduct","goBack","onSubmit","actAddProductRequest","actGetProductRequest","actUpdateProduct","actUpdateProductRequest","routes","path","exact","main","menus","MenuLink","label","activeOnlyWhenExact","active","Menu","showMenu","menu","App","showContentMenus","route","component","Boolean","window","location","hostname","initialState","action","splice","push","appReducers","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5478f31d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass HomePage extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>Trang Chu</h1>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import React, { Component } from 'react';\n\nclass NotFoundPage extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <h1 className=\"btn btn-warning\"> Khong tim thay trang</h1>\n            </div>\n        );\n    }\n}\n\nexport default NotFoundPage;","import React, { Component } from \"react\";\n\nclass ProductList extends Component {\n  render() {\n    return (\n      <div className=\"panel panel-primary\">\n        <div className=\"panel-heading\">\n          <h3 className=\"panel-title\">Danh sach san pham</h3>\n        </div>\n        <div className=\"panel-body\">\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">STT</th>\n                <th scope=\"col\">Ma San Pham</th>\n                <th scope=\"col\">Ten San Pham</th>\n                <th scope=\"col\">Gia San Pham </th>\n                <th scope=\"col\">Trang Thai</th>\n                <th scope=\"col\">Hanh Dong</th>\n              </tr>\n            </thead>\n            <tbody>\n             {this.props.children}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProductList;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass ProductItem extends Component {\n  onDelete = id => {\n    if (confirm(\"Ban chac chan muon xoa san pham nay?\")) {   //eslint-disable-line\n      this.props.onDelete(id);\n    }\n  };\n  render() {\n    let { product, index } = this.props;\n    let statusName = product.status ? \"Con Hang\" : \"Het Hang\";\n    let statusClass = product.status ? \"warning\" : \"default\";\n\n    return (\n      <tr>\n        <td>{index + 1}</td>\n        <td>{product.id}</td>\n        <td>{product.name} </td>\n        <td>{product.price}</td>\n        <td>\n          <span className={`btn btn-${statusClass}`}>{statusName}</span>\n        </td>\n        <td>\n          <Link to={`/product/${product.id}/edit`} className=\"btn btn-success\">\n            Update\n          </Link>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={() => this.onDelete(product.id)}\n          >\n            Delete\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default ProductItem;\n","export const API_URL ='https://5e107db483440f0014d82d6f.mockapi.io/api/';","import axios from \"axios\";\nimport * as Config from \"./../contans/Config\";\n\nexport default function callApi(endpoint, method = \"GET\", body) {\n  return axios({\n    method: method,\n    url: `${Config.API_URL}/${endpoint}`,\n    data: body\n  }).catch(err => {\n    console.log(err);\n  });\n}\n","import * as Types from \"./../contans/ActionTypes\";\nimport callApi from \"./../utils/apiCaller\";\nexport const actFetchProductsRequest = () => {\n  return dispatch => {\n    return callApi(\"products\", \"GET\", null).then(res => {\n      dispatch(actFetchProducts(res.data));\n    });\n  };\n};\n\nexport const actFetchProducts = products => {\n  return {\n    type: Types.FETCH_PRODUCTS,\n    products\n  };\n};\n\nexport const actDeleteProductRequest = id => {\n  return dispatch => {\n    return callApi(`products/${id}`, \"DELETE\", null).then(res => {\n      dispatch(actDeleteProduct(id));\n    });\n  };\n};\n\nexport const actDeleteProduct = id => {\n  return {\n    type: Types.DELETE_PRODUCT,\n    id\n  };\n};\n\nexport const actAddProductRequest = product => {\n  return dispatch => {\n    return callApi(`products`, \"POST\", product).then(res => {\n      dispatch(actAddProduct(res.data));\n    });\n  };\n};\n\nexport const actAddProduct = product => {\n  return {\n    type: Types.ADD_PRODUCT,\n    product\n  };\n};\n\nexport const actGetProduct = product => {\n  return {\n    type: Types.EDIT_PRODUCT,\n    product\n  };\n};\n\nexport const actGetProductRequest = id => {\n  return dispatch => {\n    return callApi(`products/${id}`, \"GET\", null).then(res => {\n      dispatch(actGetProduct(res.data));\n    });\n  };\n};\n\nexport const actUpdateProduct = product => {\n  return {\n    type: Types.UPDATE_PRODUCT,\n    product\n  };\n};\n\nexport const actUpdateProductRequest = product => {\n  return dispatch => {\n    return callApi(`products/${product.id}`, \"PUT\", product).then(res => {\n      dispatch(actUpdateProduct(res.data));\n    });\n  };\n};\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\nexport const EDIT_PRODUCT = 'EDIT_PRODUCT';","import React, { Component } from \"react\";\nimport ProductList from \"./../../components/ProductList/ProductList\";\nimport ProductItem from \"./../../components/ProductItem/ProductItem\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  actFetchProductsRequest,\n  actDeleteProductRequest,\n} from \"./../../actions/index\";\nclass ProductListPage extends Component {\n  componentDidMount() {\n    this.props.fetchAllProducts();\n  }\n\n  findIndex = (products, id) => {\n    let result = -1;\n    products.forEach((product, index) => {\n      if (product.id === id) {\n        result = index;\n      }\n    });\n    return result;\n  };\n\n  onDelete = id => {\n    // let { products } = this.state;\n    // callApi(`products/${id}`, \"DELETE\", null).then(res => {\n    //   if (res.status === 200) {\n    //     let index1 = this.findIndex(products, id);\n    //     if (index1 !== -1) {\n    //       products.splice(index1, 1);\n    //       this.setState({\n    //         products\n    //       });\n    //     }\n    //   }\n    // });\n    this.props.onDeleteProduct(id);\n  };\n\n  render() {\n    let { products } = this.props;\n\n    return (\n      <div className=\"container\">\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <Link to=\"/product/add\" className=\"btn btn-success\">\n            Add Product\n          </Link>\n          <ProductList>{this.showProduct(products)}</ProductList>\n        </div>\n      </div>\n    );\n  }\n  showProduct = products => {\n    let result = null;\n    if (products.length > 0) {\n      result = products.map((product, index) => {\n        return (\n          <ProductItem\n            key={index}\n            product={product}\n            index={index}\n            onDelete={this.onDelete}\n          />\n        );\n      });\n    }\n    return result;\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    fetchAllProducts: () => {\n      dispatch(actFetchProductsRequest());\n    },\n    onDeleteProduct: id => {\n      dispatch(actDeleteProductRequest(id));\n    },\n    \n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListPage);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  actAddProductRequest,\n  actGetProductRequest,\n  actUpdateProductRequest\n} from \" ./../../src/actions/index\";\nimport { connect } from \"react-redux\";\nclass ProductActionPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      txtName: \"\",\n      txtPrice: \"\",\n      chkbStatus: \"\"\n    };\n  }\n\n  componentDidMount = () => {\n    let { match } = this.props;\n    if (match) {\n      let id = match.params.id;\n      // callApi(`products/${id}`).then(res => {\n      //   let data = res.data;\n      //   this.setState({\n      //     id: data.id,\n      //     txtName: data.name,\n      //     txtPrice: data.price,\n      //     chkbStatus: data.status\n      //   });\n      // });\n      this.props.onEditProduct(id);\n    }\n  };\n\n  UNSAFE_componentWillReceiveProps = nextProps => {\n    if (nextProps && nextProps.itemEditting) {\n      let { itemEditting } = nextProps;\n      this.setState({\n        id: itemEditting.id,\n        txtName: itemEditting.name,\n        txtPrice: itemEditting.price,\n        chkbStatus: itemEditting.status\n      });\n    }\n  };\n\n  onChange = e => {\n    let target = e.target;\n    let name = target.name;\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  onSave = e => {\n    e.preventDefault();\n    let { id, txtName, txtPrice, chkbStatus } = this.state;\n    let { history } = this.props;\n    let product = {\n      id: id,\n      name: txtName,\n      price: txtPrice,\n      status: chkbStatus\n    };\n    if (id) {\n      // callApi(`products/${id}`, \"PUT\", {\n      //   name: txtName,\n      //   price: txtPrice,\n      //   status: chkbStatus\n      // }).then(res => {\n      //   history.goBack();\n      // });\n      this.props.onUpdateProduct(product);\n    } else {\n      this.props.onAddProduct(product);\n    }\n    history.goBack();\n  };\n\n  render() {\n    let { txtName, txtPrice, chkbStatus } = this.state;\n    return (\n      <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n        <form onSubmit={this.onSave}>\n          <div className=\"form-group\">\n            <label>Product Name : </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"txtName\"\n              value={txtName}\n              onChange={this.onChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Price : </label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              name=\"txtPrice\"\n              value={txtPrice}\n              onChange={this.onChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Trang Thai : </label>\n          </div>\n          <div className=\"checkbox\">\n            <label>\n              <input\n                type=\"checkbox\"\n                value={chkbStatus}\n                name=\"chkbStatus\"\n                onChange={this.onChange}\n                checked={chkbStatus}\n              />\n              Con Hang\n            </label>\n          </div>\n          <Link to=\"/product-list\" className=\"btn btn-secondary\">\n            Back\n          </Link>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Save\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    itemEditting: state.itemEditting\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onAddProduct: product => {\n      dispatch(actAddProductRequest(product));\n    },\n    onEditProduct: id => {\n      dispatch(actGetProductRequest(id));\n    },\n    onUpdateProduct: product => {\n      dispatch(actUpdateProductRequest(product));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductActionPage);\n","import React from \"react\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport NotFoundPage from \"./pages/NotFoundPage/NotFoundPage\";\nimport ProductListPage from \"./pages/ProductListPage/ProductListPage\";\nimport ProductActionPage from \"./pages/ProductActionPage/ProductActionPage\";\n\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    main: () => <HomePage />\n  },\n  {\n    path: \"/product-list\",\n    exact: false,\n    main: () => <ProductListPage />\n  },\n  {\n    path: \"/product/add\",\n    exact: false,\n    main: ({ history }) => <ProductActionPage history={history} />\n  },\n  {\n    path: \"/product/:id/edit\",\n    exact: false,\n    main: ({ match, history }) => (\n      <ProductActionPage match={match} history={history} />\n    )\n  },\n  {\n    path: \"\",\n    exact: false,\n    main: () => <NotFoundPage />\n  }\n];\n\nexport default routes;\n","import React, { Component } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\n\nconst menus = [\n  {\n    name: \"Home\",\n    to: \"/\",\n    exact: true\n  },\n  {\n    name: \" Product list\",\n    to: \"/product-list\",\n    exact: false\n  }\n];\n\nconst MenuLink = ({ label, to, activeOnlyWhenExact }) => {\n  return (\n    <Route \n    path={to}\n    exact={activeOnlyWhenExact} \n    children={({ match }) => { \n      let active = match ? 'btn btn-outline-info' : ''\n      return (\n        <li className={`nav-item ${active}`}>\n            <Link to={to} className=\"nav-link\">\n              {label}\n            </Link>\n        </li>\n      )\n    }} \n    \n    />\n  );\n};\n\nclass Menu extends Component {\n  render() {\n    return (\n      <ul className=\"nav\">\n        {this.showMenu(menus)}\n      </ul>\n    );\n  }\n\n  showMenu = menus => {\n    let result = null;\n    if(menus.length > 0){\n      result = menus.map((menu,index) => {\n        return <MenuLink key={index} label={menu.name} to={menu.to} activeOnlyWhenExact={menu.exact} />\n      })\n    }\n    return result\n  }\n}\n\nexport default Menu;\n","import React, { Component } from \"react\";\nimport routes from \"./routes\";\nimport \"./App.css\";\nimport Menu from \"./components/Menu/Menu\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Menu />\n\n          <div className=\"container\">\n            <div className=\"row\">\n             \n\n              {this.showContentMenus(routes)}\n            </div>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n  showContentMenus = routes => {\n    let result = null;\n    if (routes.length > 0) {\n      result = routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={route.main}\n          />\n        );\n      });\n    }\n    return <Switch>{result}</Switch>;\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Types from \"./../contans/ActionTypes\";\n\nlet initialState = [];\n\nlet findIndex = (products, id) => {\n  let result = -1;\n  products.forEach((product, index) => {\n    if (product.id === id) {\n      result = index;\n    }\n  });\n  return result;\n};\n\nconst products = (state = initialState, action) => {\n  let index = -1;\n  let { id,product } = action;\n  switch (action.type) {\n    case Types.FETCH_PRODUCTS:\n      state = action.products;\n      return [...state];\n    case Types.DELETE_PRODUCT:\n      index = findIndex(state, id);\n      state.splice(index, 1);\n      return [...state];\n    case Types.ADD_PRODUCT:\n      state.push(action.product);\n      return [...state];\n    case Types.UPDATE_PRODUCT:\n      index = findIndex(state,product)\n      state[index] = product \n      return [...state];\n    default:\n      return [...state];\n  }\n};\n\nexport default products;\n","import * as Types from './../contans/ActionTypes';\n\nlet initialState = {};\n\nconst itemEditting = (state = initialState, action) => {\n    switch(action.type){\n        case Types.EDIT_PRODUCT: \n            return action.product\n        default: \n            return state;\n    }\n}\nexport default itemEditting","import { combineReducers } from 'redux';\nimport products from './products';\nimport itemEditting from './itemEditting';\nconst appReducers = combineReducers({\n    products,\n    itemEditting\n});\n\nexport default appReducers; ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport appReducers from \"./reducers/index\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n  appReducers,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}